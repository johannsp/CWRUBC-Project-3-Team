{"version":3,"sources":["logo.svg","components/Jumbotron/Jumbotron.js","components/Grid/Col.js","components/Grid/Container.js","components/Grid/Row.js","components/Form/Input.js","components/Form/FormBtn.js","utils/authAPI.js","pages/Login/Login.js","pages/Signup/Signup.js","pages/NoMatch/NoMatch.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Jumbotron","_ref","children","react_default","a","createElement","style","height","clear","paddingTop","textAlign","className","Col","size","split","map","join","Container","fluid","concat","Row","Input","props","Object","assign","FormBtn","float","marginBottom","authAPI","login","email","password","axios","post","signup","logout","get","userData","id","Login","_useState","useState","_useState2","slicedToArray","formObject","setFormObject","handleInputChange","event","_event$target","target","name","value","objectSpread","defineProperty","Jumbotron_Jumbotron","onChange","type","placeholder","onClick","preventDefault","then","catch","err","console","log","react_router_dom","to","Signup","role","aria-hidden","class","NoMatch","App","src","logo","alt","react_router","exact","path","Login_Login","Signup_Signup","NoMatch_NoMatch","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3ff00154.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.495d93cc.svg\";","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n","import React from \"react\";\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n","import React from \"react\";\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n","import axios from \"axios\";\n\nexport default {\n  // Login\n  login: function(email, password) {\n    return axios.post(\"/api/auth/login\", {\n      email: email,\n      password: password\n    })\n  },\n  signup: function(email, password) {\n    return axios.post(\"/api/auth/signup\", {\n      email: email,\n      password: password\n    })\n  },\n  logout: function() {\n    return axios.get(\"/api/auth/logout\");\n  },\n  userData: function(id) {\n    return axios.get(\"/api/auth/user_data\" + id);\n  }\n};\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Input, TextArea, FormBtn } from \"../../components/Form\";\nimport authAPI from \"../../utils/authAPI\";\n\nfunction Login() {\n  const [formObject, setFormObject] = useState({\n    email: \"\",\n    password: \"\"\n  })\n\n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({...formObject, [name]: value})\n  };\n\n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (formObject.email && formObject.password) {\n      authAPI.login(formObject.email, formObject.password)\n        .then(() => setFormObject({\n          email: \"\",\n          password: \"\"\n        }))\n        .then({/* Need to change pages here!!*/})\n        .catch(err => console.log(err));\n    }\n  };\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-6 md-offset-3\">\n          <Jumbotron>\n          <h2>Login Form</h2>\n          </Jumbotron>\n\n          {/* Login Form */}\n          <form className=\"login\">\n            <Input\n              onChange={handleInputChange}\n              type=\"email\"\n              name=\"email-input\"\n              placeholder=\"Email\"\n              value={formObject.email}\n            />\n            <Input\n              onChange={handleInputChange}\n              type=\"password\"\n              name=\"password-input\"\n              placeholder=\"Password\"\n              value={formObject.password}\n            />\n            <FormBtn\n              className=\"btn btn-default\"\n              onClick={handleFormSubmit}\n            >\n            Login\n            </FormBtn>\n          </form>\n          \n          <br />\n          <p>Or sign up <Link to=\"/signup\">here</Link></p>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { Input, TextArea, FormBtn } from \"../../components/Form\";\nimport authAPI from \"../../utils/authAPI\";\n\nfunction Signup() {\n  const [formObject, setFormObject] = useState({\n    email: \"\",\n    password: \"\"\n  })\n\n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({...formObject, [name]: value})\n  };\n\n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (formObject.email && formObject.password) {\n      authAPI.signup(formObject.email, formObject.password)\n        .then(() => setFormObject({\n          email: \"\",\n          password: \"\"\n        }))\n        .then({/* Need to change pages here!!*/})\n        .catch(err => console.log(err));\n    }\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col size=\"md-6 md-offset-3\">\n          <Jumbotron>\n          <h2>Sign Up Form</h2>\n          </Jumbotron>\n\n          {/* Signup Form */}\n          <form className=\"signup\">\n            <Input\n              onChange={handleInputChange}\n              type=\"email\"\n              name=\"email-input\"\n              placeholder=\"Email\"\n              value={formObject.email}\n            />\n            <Input\n              onChange={handleInputChange}\n              type=\"password\"\n              name=\"password-input\"\n              placeholder=\"Password\"\n              value={formObject.password}\n            />\n            <FormBtn\n              className=\"btn btn-default\"\n              onClick={handleFormSubmit}\n            >\n            Sign up\n            </FormBtn>\n            <div style=\"display: none\" id=\"alert\" className=\"alert alert-danger\" role=\"alert\">\n              <span className=\"glyphicon glyphicon-exclamation-sign\" aria-hidden=\"true\"></span>\n              <span className=\"sr-only\">Error:</span> <span className=\"msg\"></span>\n            </div>\n            <button type=\"submit\" class=\"btn btn-default\">Sign Up</button>\n          </form>\n          \n          <br />\n          <p>Or log in <Link to=\"/login\">here</Link></p>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Signup;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport Jumbotron from \"../../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport NoMatch from \"./pages/NoMatch\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h2>Welcome to React</h2>\n        </div>\n        <p className=\"App-intro\">\n          Coming Soon... Class Time App!\n        </p>\n        <Router>\n          <Switch>\n            <Route exact path={[\"/\", \"/login\"]}>\n              <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route>\n              <NoMatch />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}